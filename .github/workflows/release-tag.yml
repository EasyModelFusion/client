name: Client release

on:
  push:
    tags:
      - '*'

jobs:
  release:
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write
      pull-requests: write
      repository-projects: write

    strategy:
      matrix:
        os: [ubuntu-latest] # [windows-latest, ubuntu-latest, macos-latest]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Installing Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.21.6

    - name: Installing Go dependency
      run: go get -v -t -d ./...

    - name: Build for Windows
      run: GOOS=windows GOARCH=amd64 go build -o emf-cli-windows-amd64.exe

    - name: Build for Mac
      run: GOOS=darwin GOARCH=amd64 go build -o emf-cli-darwin-amd64

    - name: Build for Linux
      run: GOOS=linux GOARCH=amd64 go build -o emf-cli-linux-amd64

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}

    - name: Upload Windows Artifact
      id: upload-windows-artifact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./emf-cli-windows-amd64.exe
        asset_name: emf-cli-windows-amd64.exe
        asset_content_type: application/octet-stream

    - name: Upload Mac Artifact
      id: upload-mac-artifact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./emf-cli-darwin-amd64
        asset_name: emf-cli-darwin-amd64
        asset_content_type: application/octet-stream

    - name: Upload Linux Artifact
      id: upload-linux-artifact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./emf-cli-linux-amd64
        asset_name: emf-cli-linux-amd64
        asset_content_type: application/octet-stream