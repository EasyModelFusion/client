name: client workflow

on:
  push:
    branches:
      - 14-create-create-CI-CD # main
  pull_request:
    branches:
      - main

jobs:
  lint:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest] # [windows-latest, ubuntu-latest, macos-latest]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Installing Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.21.6
    
    - name: Installing golangci-lint
      uses: golangci/golangci-lint-action@v2
      with:
        version: latest

    - name: run golangci-lint
      run: golangci-lint run ./...
    

  build:
    runs-on: ${{ matrix.os }}
    needs: lint

    strategy:
      matrix:
        os: [ubuntu-latest] # [windows-latest, ubuntu-latest, macos-latest]

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Installing Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.21.6

    - name: Installing Go dependency
      run: go get -v -t -d ./...

    - name: Display Go version
      run: go version

    - name: Code compilation
      run: go build ./...


  coverage:
    runs-on: ${{ matrix.os }}
    needs: build

    strategy:
      matrix:
        os: [ubuntu-latest] # [windows-latest, ubuntu-latest, macos-latest]

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Installing Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.21.6

    - name: generate test coverage
      run: go test ./... -coverprofile=./cover.out -covermode=atomic -coverpkg=./...

    - name: Upload coverage artifact
      if: github.event_name == 'push'
      uses: actions/upload-artifact@v2
      with:
        name: coverage
        path: ./cover.out

    - name: check test coverage
      uses: vladopajic/go-test-coverage@v2
      with:
        profile: cover.out
        local-prefix: github.com/org/project
        threshold-file: 70
        threshold-package: 80
        threshold-total: 90
