name: vérification du client 

on:
  push:
    branches:
      - 14-create-create-CI-CD

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]

    steps:
    - name: Checkout du code
      uses: actions/checkout@v2

    - name: Installer Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.21.6

    - name: Installer les dépendances Go
      run: go get -v -t -d ./...

    - name: Display Go version
      run: go version

    - name: Compilation du code
      run: go build ./...


#    - name: Exécuter main.go
#      id: run-main
#      run: go run main.go

#    - name: Afficher la sortie de main.go
#      run: echo "La sortie de main.go est '${{ steps.run-main.outputs.stdout }}'"
#      id: set-output
      
#    - name: Définir la sortie pour le job build
#      run: echo "run-main=${{ steps.set-output.outputs.stdout }}" >> $GITHUB_ENV

  coverage:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout du code
      uses: actions/checkout@v2

    - name: Installer Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.21.6

    - name: Installer golangci-lint
      uses: golangci/golangci-lint-action@v2
      with:
        version: latest

    - name: Exécuter golangci-lint
      run: golangci-lint run ./...

    - name: Exécuter les tests avec la couverture de code
      run: |
        go test -coverprofile=coverage.out ./...

    - name: Afficher le rapport de couverture de code
      run: go tool cover -func=coverage.out